name: Secure Scan with SSH Access via Tailscale

on:
  workflow_dispatch:
    inputs:
      target_host:
        description: 'Hostname Tailscale (atau IP 100.x.x.x) dari laptop tujuan SSH/Scan'
        required: true
        default: 'nama-laptop-anda-di-tailscale'
      target_user:
        description: 'Username SSH di laptop tujuan (Contoh: dolvin)'
        required: true
        default: 'dolvin'
      tailscale_tag:
        description: 'Tag ACL Tailscale untuk runner (Sesuai dengan ACL Anda)'
        required: true
        default: 'tag:ci'

jobs:
  ssh_and_security_job:
    runs-on: ubuntu-latest
    
    # Memastikan kunci SSH privat digunakan sekali
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout Kode
        uses: actions/checkout@v4

      # =========================================================
      # 1. KONEKSI AMAN KE TAILSCALE
      # =========================================================
      - name: Hubungkan ke Jaringan Tailscale
        uses: tailscale/github-action@v2
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }} 
          tags: ${{ github.event.inputs.tailscale_tag }}

      - name: Tampilkan Status Tailscale (Verifikasi)
        run: tailscale status

      # =========================================================
      # 2. KONFIGURASI SSH (Menggunakan Private Key)
      # =========================================================
      - name: Siapkan Kunci SSH Privat
        uses: webfactory/ssh-agent@v0.9.0
        with:
          # SSH_PRIVATE_KEY adalah secret yang Anda buat, berisi kunci privat
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          
      - name: Konfigurasi SSH
        run: |
          # Perlu menambahkan Tailscale Host ke known_hosts
          ssh-keyscan -H ${{ github.event.inputs.target_host }} >> ~/.ssh/known_hosts

      - name: üìû Uji Koneksi SSH ke Laptop Tujuan
        run: |
          # Mencoba koneksi SSH sederhana
          ssh -o StrictHostKeyChecking=no ${{ github.event.inputs.target_user }}@${{ github.event.inputs.target_host }} "hostname && echo 'Koneksi SSH berhasil!'"
          
          # Sekarang Anda bisa menjalankan perintah SSH lainnya, misalnya:
          # ssh ${{ github.event.inputs.target_user }}@${{ github.event.inputs.target_host }} "ls -la /home/${{ github.event.inputs.target_user }}"
          
      # =========================================================
      # 3. INSTALASI TOOLS KEAMANAN (Subfinder, Nuclei, httpx, Dalfox)
      # =========================================================
      - name: Instalasi Go dan Tools
        run: |
          sudo apt-get update && sudo apt-get install -y golang-go
          export PATH=$PATH:$(go env GOPATH)/bin
          
          echo "Menginstal Subfinder, httpx, Nuclei, Dalfox..."
          go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest
          go install -v github.com/projectdiscovery/httpx/cmd/httpx@latest
          go install -v github.com/projectdiscovery/nuclei/v3/cmd/nuclei@latest
          go install -v github.com/hahwul/dalfox@latest

        env:
          PATH: /home/runner/go/bin:/usr/local/go/bin:$PATH

      # =========================================================
      # 4. JALANKAN WORKFLOW SCANNING (Menggunakan Host Target sebagai Target Scan)
      # =========================================================
      - name: üåê Jalankan httpx (Filter URL Aktif pada host target)
        # Mencoba akses HTTP/HTTPS langsung ke host Tailscale (misalnya untuk API internal)
        run: |
          echo "${{ github.event.inputs.target_host }}" | httpx -o live_target.txt -silent -title -tech-detect -status-code
          echo "Memindai host Tailscale ${{ github.event.inputs.target_host }}"
        env:
          PATH: /home/runner/go/bin:/usr/local/go/bin:$PATH
          
      # (Langkah Subfinder, Nuclei, dan Dalfox lain dapat ditambahkan di sini
      # jika Anda ingin memindai host Tailscale tersebut)
      
