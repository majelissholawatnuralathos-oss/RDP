name: Secure Scan via Tailscale (Subfinder, Nuclei, httpx, Dalfox)

# Memungkinkan pemicuan manual dari tab Actions di GitHub
on:
  workflow_dispatch:
    inputs:
      target_domain:
        description: 'Domain target untuk dipindai (Contoh: internal.example.com)'
        required: true
        default: 'example.com'
      tailscale_tag:
        description: 'Tag ACL Tailscale untuk runner (Sesuai dengan ACL Anda)'
        required: true
        default: 'tag:ci'

jobs:
  security_scan_job:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # =========================================================
      # 1. KONEKSI AMAN KE TAILSCALE
      # =========================================================
      - name: Hubungkan ke Jaringan Tailscale (Menggunakan Auth Key)
        uses: tailscale/github-action@v2
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }} 
          tags: ${{ github.event.inputs.tailscale_tag }}

      - name: Tampilkan Status Tailscale (Verifikasi)
        run: tailscale status

      # =========================================================
      # 2. INSTALASI GO & TOOLS KEAMANAN
      # =========================================================
      - name: Instalasi Go dan Tools
        run: |
          # Instalasi Go
          sudo apt-get update && sudo apt-get install -y golang-go

          # Atur PATH agar binary Go dapat diakses
          export PATH=$PATH:$(go env GOPATH)/bin
          
          echo "Menginstal Subfinder, httpx, Nuclei, Dalfox..."
          go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest
          go install -v github.com/projectdiscovery/httpx/cmd/httpx@latest
          go install -v github.com/projectdiscovery/nuclei/v3/cmd/nuclei@latest
          go install -v github.com/hahwul/dalfox@latest

        env:
          PATH: /home/runner/go/bin:/usr/local/go/bin:$PATH

      # =========================================================
      # 3. JALANKAN WORKFLOW SCANNING
      # =========================================================
      
      - name: üîç Jalankan Subfinder (Recon Subdomain)
        # Menemukan subdomain dari target domain input
        run: |
          subfinder -d ${{ github.event.inputs.target_domain }} -silent -o subdomains.txt
          echo "Ditemukan $(cat subdomains.txt | wc -l) subdomain."
        env:
          PATH: /home/runner/go/bin:/usr/local/go/bin:$PATH

      - name: üåê Jalankan httpx (Filter URL Aktif)
        # Memfilter URL yang aktif, mengambil kode status, judul, dan mendeteksi teknologi
        run: |
          httpx -l subdomains.txt -o live_urls.txt -silent -title -tech-detect -status-code
          echo "Ditemukan $(cat live_urls.txt | wc -l) URL aktif."
        env:
          PATH: /home/runner/go/bin:/usr/local/go/bin:$PATH

      - name: üí£ Jalankan Nuclei (Vulnerability Scanning)
        # Memindai kerentanan level High dan Critical pada URL yang ditemukan
        run: |
          nuclei -l live_urls.txt -t cves/,vulnerabilities/ -severity high,critical -o nuclei_results.txt -stats || true
          echo "Hasil Nuclei tersimpan di nuclei_results.txt"
        env:
          PATH: /home/runner/go/bin:/usr/local/go/bin:$PATH

      - name: ü¶ä Jalankan Dalfox (XSS Scanning)
        # Mengambil URL dengan parameter dari live_urls.txt untuk dipindai XSS
        run: |
          grep -i "?" live_urls.txt | dalfox pipe -o dalfox_results.txt || true
          echo "Hasil Dalfox (XSS) tersimpan di dalfox_results.txt"
        env:
          PATH: /home/runner/go/bin:/usr/local/go/bin:$PATH
      
      # =========================================================
      # 4. UPLOAD ARTIFACTS
      # =========================================================
      
      - name: üíæ Upload Hasil Scan sebagai Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: scan-results-${{ github.event.inputs.target_domain }}-${{ github.sha }}
          path: |
            subdomains.txt
            live_urls.txt
            nuclei_results.txt
            dalfox_results.txt
          if-no-files-found: ignore
          
